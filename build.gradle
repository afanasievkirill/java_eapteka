plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    allureVersion = "2.13.3"
    selenideVersion = "5.13.0"
    junitVersion = "5.6.2"
}

//
test {
    useJUnitPlatform()
}

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    testImplementation "org.aspectj:aspectjweaver:1.9.5"
    implementation 'com.codeborne:selenide:5.13.0'
    compile("org.junit.jupiter:junit-jupiter-api:5.6.2")
    compile("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.4.2")
    compile "io.qameta.allure:allure-selenide:${allureVersion}"
    compile "io.qameta.allure:allure-rest-assured:${allureVersion}"
    compile "io.qameta.allure:allure-java-commons:${allureVersion}"
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
    compile 'com.squareup.retrofit2:retrofit:2.9.0'
    compile 'com.squareup.retrofit2:converter-gson:2.9.0'
    compile 'io.qameta.allure:allure-okhttp3:2.13.3'
    testCompile 'junit:junit:4.12'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


